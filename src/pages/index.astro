---
import Layout from '../layouts/Layout.astro';
import coreIcon from "../assets/images/core.svg";
import projects from "../data/projects.ts";
import ProjectCard from "../components/ProjectCard.astro";
import SocialLinks from "../components/SocialLinks.astro";

import meow1 from "../assets/core/meow1.ogg?url";
import meow2 from "../assets/core/meow2.ogg?url";
import meow3 from "../assets/core/meow3.ogg?url";
import meow4 from "../assets/core/meow4.ogg?url";

const catSounds = [ 
		meow1,
        meow2,
        meow3,
		meow4
];

import "../styles/global.css";
---

<Layout>
	<section class="min-h-screen flex items-center pt-32 pb-20 px-4 sm:px-6 lg:px-8">
		<div class="max-w-7xl mx-auto text-center">
			<div class="mx-auto mb-8 relative inline-flex items-center w-fit" data-aos="fade-up">
				<div class="absolute inset-0 bg-gradient-to-r from-[var(--accent1)] to-[var(--accent2)] blur-3xl opacity-30 rounded-full"></div>
				<img src={coreIcon.src} class="size-32 md:size-48 mr-6" />
				<h1 class="text-5xl md:text-7xl text-left font-bold gradient-text relative">
					CoreCat
					<span class="block mt-2 text-xl md:text-3xl">Developer, Composer, and Artist</span>
				</h1>
			</div>

			<p class="text-lg md:text-xl text-gray-400 max-w-3xl mx-auto mb-12" data-aos="fade-up" data-aos-delay="100">
				I'm a <span class="gradient-text">developer</span> and a <span class="gradient-text">Glitch Hop</span> composer.<br>
				Mainly uses <span class="gradient-text">Haxe <img class="inline-block size-6 invert-[0.8]" src="https://www.svgrepo.com/show/341899/haxe.svg"></span>, but I'm interested in learning other languages.
			</p>

			<div class="flex flex-col sm:flex-row justify-center gap-4" data-aos="fade-up" data-aos-delay="200">
				<a href="#projects" class="hover-scale inline-flex items-center bg-gradient-to-r from-[var(--accent1)] to-[var(--accent2)] text-white px-8 py-4 rounded-full text-lg font-medium shadow-lg hover:shadow-xl transition-all">
					Projects
					<svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
					</svg>
				</a>
				<a href="#socials" class="hover-scale inline-flex items-center border border-[var(--accent1)] text-[var(--accent1)] px-8 py-4 rounded-full hover:bg-[var(--accent1)]/10 transition-colors">
					Socials
				</a>
			</div>
		</div>
	</section>

	<section id="projects" class="py-20 px-4 sm:px-6 lg:px-8">
		<div class="max-w-7xl mx-auto">
			<h2 class="text-5xl md:text-6xl font-bold text-center w-fit mx-auto mb-12 gradient-text" data-aos="fade-up">
				Projects
				<span class="block mt-2 font-normal text-xl md:text-2xl">Here are list of things I've made!</span>
			</h2>
			<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
				{projects.map((project, index) => (
					<ProjectCard {...project} delay={index * 100} />
				))}
			</div>
		</div>
	</section>

	<section id="socials" class="py-20 px-4 sm:px-6 lg:px-8">
		<div class="max-w-7xl mx-auto">
			<h2 class="text-5xl md:text-6xl font-bold text-center w-fit mx-auto mb-12 gradient-text" data-aos="fade-up">
				Socials
				<span class="block mt-2 font-normal text-xl md:text-2xl">I'm on these platforms as well!</span>
			</h2>
			<SocialLinks />
		</div>
	</section>
</Layout>
<script type="module" define:vars={{ catSounds }}>

    let typed = '';
    const emojis = ['🙀', '😺', '🐱', '😼', '😺']; 

    document.addEventListener('keydown', (event) => {
        typed += event.key.toLowerCase(); 
        if (!"cat".startsWith(typed)) typed = '';

        if (typed === 'cat') {
            typed = '';
            activateCatMode();
        }
    });

	function activateCatMode() {
		const overlay = document.createElement('div');
		overlay.style.position = 'fixed';
		overlay.style.top = 0;
		overlay.style.left = 0;
		overlay.style.width = '100vw';
		overlay.style.height = '100vh';
		overlay.style.background = 'rgba(0, 0, 0, 0.8)';
		overlay.style.display = 'flex';
		overlay.style.alignItems = 'center';
		overlay.style.justifyContent = 'center';
		overlay.style.zIndex = 9999;
		overlay.style.transition = 'opacity 0.2s, backdrop-filter 0.2s';
		overlay.style.backdropFilter = 'blur(0px)';
		document.body.appendChild(overlay);

		const catEmoji = document.createElement('div');
		catEmoji.textContent = emojis[Math.floor(Math.random() * emojis.length)];
		catEmoji.style.fontSize = '10rem';
		catEmoji.style.opacity = 0;
		catEmoji.style.transition = 'opacity 0.2s';
		overlay.appendChild(catEmoji);

		const audio = new Audio(catSounds[Math.floor(Math.random() * catSounds.length)]);
		audio.volume = 0.7;
		audio.play();

		// Apply blur instead of zoom
		setTimeout(() => {
			overlay.style.backdropFilter = 'blur(10px)';
			catEmoji.style.opacity = 1;
		}, 1);

		audio.onended = () => {
			overlay.style.opacity = 0;
			overlay.style.backdropFilter = 'blur(0px)';
			setTimeout(() => overlay.remove(), 500);
		};
	}

</script>
