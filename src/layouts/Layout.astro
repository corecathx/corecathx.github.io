---
import Navbar from "../components/Navbar.astro";
import coreIcon from "../assets/images/core.svg";
import Background from "../components/Background.astro";
import Footer from "../components/Footer.astro";
import MetaLinks from "../components/MetaLinks.astro";
import CookieOverlay from "../components/Cookie.astro";


import meow1 from "../assets/core/meow1.ogg?url";
import meow2 from "../assets/core/meow2.ogg?url";
import meow3 from "../assets/core/meow3.ogg?url";
import meow4 from "../assets/core/meow4.ogg?url";

const catSounds = [ 
		meow1,
        meow2,
        meow3,
		meow4
];

const classT = Astro.props.class || "";
const description = Astro.props.description || "Developer, Composer, and Artist";
const image = Astro.props.image || "https://raw.githubusercontent.com/corecathx/corecathx.github.io/main/images/core.svg";
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href={coreIcon.src} />
		<meta name="generator" content={Astro.generator} />
		<title>{Astro.props.title ? `${Astro.props.title} - CoreCat` : "CoreCat"}</title>

		<MetaLinks description={description} image={image} />
		<link rel="stylesheet" href="/css/aos.css" />
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css">
		<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons" />
	</head>
	<body class={`relative min-h-screen flex flex-col ${classT}`}>
		<Background />
		<Navbar />
		
		<main class="flex-grow">
			<slot />
		</main>

		<Footer />

		<CookieOverlay />

	</body>
	<script src="/js/aos.js" type="text/javascript"></script>
	<script>
		AOS.init({
			duration: 800,
			once: true,
			easing: 'ease-out-quart'
		});
	</script>
		
	<script type="module" define:vars={{ catSounds }}>

		let typed = '';
		const emojis = ['🙀', '😺', '🐱', '😼', '😺']; 

		document.addEventListener('keydown', (event) => {
			typed += event.key.toLowerCase(); 
			if (!"cat".startsWith(typed)) typed = '';

			if (typed === 'cat') {
				typed = '';
				activateCatMode();
			}
		});

		function activateCatMode() {
			const overlay = document.createElement('div');
			overlay.style.position = 'fixed';
			overlay.style.top = 0;
			overlay.style.left = 0;
			overlay.style.width = '100vw';
			overlay.style.height = '100vh';
			overlay.style.background = 'rgba(0, 0, 0, 0.8)';
			overlay.style.display = 'flex';
			overlay.style.alignItems = 'center';
			overlay.style.justifyContent = 'center';
			overlay.style.zIndex = 9999;
			overlay.style.transition = 'opacity 0.2s, backdrop-filter 0.2s';
			overlay.style.backdropFilter = 'blur(0px)';
			document.body.appendChild(overlay);

			const catEmoji = document.createElement('div');
			catEmoji.textContent = emojis[Math.floor(Math.random() * emojis.length)];
			catEmoji.style.fontSize = '10rem';
			catEmoji.style.opacity = 0;
			catEmoji.style.transition = 'opacity 0.2s';
			overlay.appendChild(catEmoji);

			const audio = new Audio(catSounds[Math.floor(Math.random() * catSounds.length)]);
			audio.volume = 0.7;
			audio.play();

			setTimeout(() => {
				overlay.style.backdropFilter = 'blur(10px)';
				catEmoji.style.opacity = 1;
			}, 1);

			audio.onended = () => {
				overlay.style.opacity = 0;
				overlay.style.backdropFilter = 'blur(0px)';
				setTimeout(() => overlay.remove(), 500);
			};
		}

	</script>

</html>
